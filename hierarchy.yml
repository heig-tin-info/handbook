- Cours C:
  - Avant propos:
    - Objectifs du cours
    - Enseignement à la HEIG-VD
    - Organisation de l'ouvrage
  - Introduction:
    - La Programmation Informatique:
      - L'algorithmique
      - Langages de programmation
      - L'ordinateur:
        - Calculateur
        - Machine de Turing
        - Ordinateur moderne
        - Historique
      - Le microcontrôleur:
        - La machine à café
      - Exercices
    - Être développeur:
      - Le code de conduite
      - L'anglais
      - Apprendre par soi-même
      - Une affaire de consensus
      - L'open-source
      - La communauté
      - La méthode de travail:
        - Revue de code
        - Organisation d'un projet (introduction)
    - Le langage C:
      - Historique / Balbutiements
      - Standardisation
      - Environnement de développement
      - Programmation texte structurée
      - Cycle de compilation
      - Hello-World
    - Syntaxe:
      - L'alphabet
      - Fin de lignes
      - Mots clés
      - Identificateurs
      - Variables:
        - Déclaration
        - Constantes
        - Variables métasyntaxiques
      - Espaces de noms
      - Constantes littérales
      - Commentaires
    - La grammaire
  - Numération:
    - Le bit
    - Les préfixes
    - Bases:
      - Décimales
      - Binaires
      - Octales
      - Hexadécimales
      - Conversion de bases
    - La représentation des nombres:
      - Ensembles (https://fr.wikipedia.org/wiki/Nombre#/media/Fichier:NumberSetinR2.svg)
      - Naturels
      - Relatifs
      - Nombres décimaux:
        - Virgule fixe
        - Virgule flottante:
          - Simple précision
          - Double précision
          - La quadruple précision ?
      - Le format Q
  - Élements du langage:
    - Types de données:
      - Typage
      - Stockage et interprétation
      - Boutisme
      - Nombres entiers bornés:
        - Signés
        - Non-signés
      - Les caractères:
        - ASCII
        - Unicode
        - Emoticônes
      - Les chaînes de caractères
      - Les booléens
      - Les énumérations
      - Les types incomplets:
        - VLQ
        - void
      - Transtypage
    - Opérateurs:
      - l'ALU
      - Types d'opérateurs:
        - Opérateurs arithmétiques
        - Opérateurs relationnels
        - Opérateurs bit à bit
        - Opérateurs logiques
        - Opérateurs d'assignation (affectation)
        - Opérateurs d'incrémentation et de décrémentation
        - Opérateur ternaire
        - Opérateurs de transtypage
        - Opérateur séquentiel
        - Opérateur sizeof
      - Priorités des opérateurs
      - Promotion implicite
      - Valeurs gauches
    - Les fonctions d'entrées-sorties:
      - `printf`
      - `scanf`
      - `getchar`
      - `putchar`
      - `gets`
      - `puts`
    - Structures de contrôle:
      - Les séquences d'instructions
      - Les branchements:
        - Branchements conditionnels:
          - `if`, `else`
          - `switch`
      - Les boucles:
        - Boucle `while`
        - Boucle `do-while`
        - Boucle `for`
        - Boucles infinies
      - Les sauts:
        - `break`
        - `continue`
        - `goto`
        - `return`
    - Le préprocesseur:
      - Comprendre le préprocesseur
      - Les directives:
        - define
        - include
        - undef
        - ifdef, ifndef
        - if, elif, else
        - error, warning
        - pragma
        - line
      - Les macros
      - Les fichiers d'en-tête
      - Concaténation
    - Les fonctions:
      - Fonctions:
        - Définition
        - Conventions d'appel
        - Stack
        - Prototypes
    - Portée et visibilité:
      - Espace de nommage
      - Variable shadowing
      - Visibilité
      - Qualificatifs de portée:
        - static
        - extern
        - register
        - auto
        - const
        - volatile
        - restrict
        - inline
  - Architecture et systèmes:
    - L'ordinateur:
      - La RAM
      - La ROM
      - Le CPU:
        - Les registres
        - L'ALU
      - La carte mère:
        - Le chipset
        - Le BIOS
        - Les bus
    - Les systèmes à microcontrôleurs:
      - Les microcontrôleurs
      - Adaptation du style de programmation
      - Les interruptions
      - Les périphériques
      - Les ports
    - Gestion de la mémoire:
      - Adressage
    - Programmes et processus:
      - Architecture d'un programme:
        - Le status de sortie
        - Les variables d'environnement
        - Les arguments
      - Les exécutables
      - Les signaux
      - Les fichiers:
        - Les fichiers binaires
        - Les fichiers textes
        - Les fichiers tabulaires
      - Les flux:
        - Pipes
        - Fin de fichier
        - Seek
  - Structures de données et pointeurs:
    - Les types composés:
      - Les tableaux
      - Les structures
      - Les champs de bits
      - Les unions
      - Les énumérations
      - Déclaration de types avec `typedef`
    - Les pointeurs:
      - Adresses et valeurs
      - Aritmétique de pointeurs
      - Les pointeurs sur les tableaux
      - Les pointeurs sur les structures:
        - Structures auto-référencées
      - Les pointeurs de fonctions
      - Allocation dynamique
    - Les conteneurs de données:
      - Les tableaux dynamiques
      - Les listes chaînées
      - Les piles
      - Les files
      - Les arbres
        - Les arbres binaires
        - Les arbres binaires de recherche
        - Les arbres AVL
        - Les arbres rouges-noirs
      - Les graphes
  - Programmes modulaires:
    - Introduction
    - Compilation séparées:
      - Variables partagées
      - Les fichiers d'en-tête
    - Bibliothèques statiques et dynamiques
    - Makefile
  - Bibliotheques:
    - Les bibliothèques standard
    - Les bibliothèques externes
  - Algorithmes et conception:
    - Introduction
      - Complexité algorithmique:
        - Notation de Landau
        - Complexité temporelle
        - Complexité spatiale
      - Machines d'états
      - Diagrammes visuels
    - Algorithmes utilitaires
      - slurp
      - split
      - join
      - grep
      - parsing d'arguments
    - Algorithmes de recherche
      - Recherche séquentielle
      - Recherche dichotomique
      - Performances
    - Algorithmes de tris
      - Introduction
      - HeapSort
      - QuickSort
      - CountingSort
      - Stabilité des tris
    - Récursion:
      - Programmation dynamique
      - Mémoïsation
      - Récursion terminale
      - Algorithmes de graphes
        - Parcours en largeur
        - Parcours en profondeur
        - Dijkstra
        - Bellman-Ford
        - Floyd-Warshall
  - Gestion de projet:
    - Travail en équipe:
      - Équipe de développement
      - Équipe de test
      - Équipe de support
    - Organisation d'un projet
      - Gestion de versions
      - Dotfiles
    - Intégration continue
      - CI/CD
    - La qualité du code
      - Testabilité
      - La documentation
  - Philosophie et attitude:
    - Philosophie:
      - Rasoir d'Ockham
      - Effet Dunning-Kruger
      - Philosophie de conception
      - L'odeur du code
    - Humour d'informaticien
  - Exercices
