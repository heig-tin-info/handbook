name: ci

on:
  push:
    branches:
      - master
      - main
    tags:
      - "*"

permissions:
  contents: write

concurrency:
  group: mkdocs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build MkDocs Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git Credentials
        env:
          GH_TOKEN: ${{ secrets.MKDOCS_MATERIALS_INSIDER_PAT }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git config --global url."https://${GH_TOKEN}@github.com/".insteadOf "git@github.com:"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "poetry"

      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pngquant ghostscript

      - name: Install Poetry
        uses: abatilo/actions-poetry@v4

      - name: Install Python deps with Poetry
        run: poetry install --no-interaction --no-ansi

      - name: Cache MkDocs build directory
        uses: actions/cache@v4
        with:
          path: ./build
          key: ${{ runner.os }}-mkdocs-build-${{ hashFiles('docs/**/*.md', 'mkdocs.yml') }}
          restore-keys: |
            ${{ runner.os }}-mkdocs-build-

      - name: Build & Deploy Documentation with MkDocs
        env:
          MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
          GH_TOKEN: ${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
        run: CI=true poetry run mkdocs gh-deploy --force

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: latex
          path: ./build

  book:
    name: Build LaTeX Book
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: latex
          path: ./build

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          buildkitd-flags: --oci-worker=true --oci-worker-gc=false

      - name: Build Docker image
        run: |
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache \
                              --cache-to=type=local,dest=/tmp/.buildx-cache \
                              --load \
                              -t latex-ycr:latest .

      - name: Build LaTeX Book (using Docker)
        run: make ci

      - name: Upload PDF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: build/*/output-print.pdf
          if-no-files-found: ignore

  release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: book
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download PDF Artifact
        uses: actions/download-artifact@v4
        with:
          name: PDF
          path: ./build

      - name: Rename PDF files
        run: |
          mv ./build/book/output-print.pdf ./build/handbook.pdf
          mv ./build/tools/output-print.pdf ./build/devtools.pdf

      - name: Create release & upload assets
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref }}
          tag_name: ${{ github.ref }}
          files: |
            ./build/handbook.pdf
            ./build/devtools.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
