name: ci
on:
  push:
    branches:
      - master
      - main
    tags:
      - '*'
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git Credentials
        env:
          GH_TOKEN: ${{ secrets.MKDOCS_MATERIALS_INSIDER_PAT }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git config --global url."https://${GH_TOKEN}@github.com/".insteadOf "git@github.com:"
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt install -y pngquant ghostscript
      - uses: abatilo/actions-poetry@v2
      - run: poetry install
      - name: Cache MkDocs build directory
        uses: actions/cache@v4
        with:
          path: ./build
          key: ${{ runner.os }}-mkdocs-build-${{ hashFiles('docs/**/*.md', 'mkdocs.yml') }}
          restore-keys: |
            ${{ runner.os }}-mkdocs-build-
      - name: Check cache restore
        run: ls -alR build
      - name: Build Documentation with MkDocs
        env:
          MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
          GH_TOKEN: ${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
        run: CI=true poetry run mkdocs gh-deploy --force
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: latex
          path: ./build
  book:
    needs:
      - deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: latex
          path: ./build

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          driver: 'docker-container'
          buildkitd-flags: --oci-worker=true --oci-worker-gc=false

      - name: Build Docker image
        run: |
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache \
                              --cache-to=type=local,dest=/tmp/.buildx-cache \
                              --load \
                              -t latex-ycr:latest .

      - name: Build LaTeX Book (using Docker)
        run: |
          docker run -v ${{ github.workspace }}:/workspace \
                     -w /workspace \
                     -u $(id -u):$(id -g) \
                     -v /etc/passwd:/etc/passwd:ro \
                     -e HOME=/workspace \
                     latex-ycr \
                     make latex optimize

      - name: Upload PDF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: build/l-informatique-pour-l-ingenieur/output-print.pdf